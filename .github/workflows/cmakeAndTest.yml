name: CMake

on:
  workflow_call:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install generic packages
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y libatlas-base-dev
        sudo apt-get install -y libfftw3-dev
        sudo apt-get install -y gsl-bin
        sudo apt-get install -y libgsl0-dev
        sudo apt-get install -y ccache

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      #set up without warnings
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -Drisk_accepted=ON -all_modules_activate=ON -Denable_warnings_basic=OFF -DCMAKE_INSTALL_PREFIX="${{github.workspace}}/install"

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --parallel

    - name: Install
      run: cmake --install ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
    
    - name: set up environment for tests
      #run: source  ${{github.workspace}}/build/src/sourceme.sh
      run: |
        echo "${{github.workspace}}/install/bin/" >> $GITHUB_PATH
        echo "PLUMED_ROOT=${{github.workspace}}/install/lib/plumed" >> $GITHUB_ENV
        echo "CPATH=${{github.workspace}}/install/include:$CPATH" >> $GITHUB_ENV
        echo "INCLUDE=${{github.workspace}}/install/include:$INCLUDE" >> $GITHUB_ENV
        echo "LIBRARY_PATH=${{github.workspace}}/install/lib:$LIBRARY_PATH" >> $GITHUB_ENV
        echo "LD_LIBRARY_PATH=${{github.workspace}}/install/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV
        echo "PYTHONPATH=${{github.workspace}}/install/lib/plumed/python:$PYTHONPATH" >> $GITHUB_ENV
    #- env: PLUMED_ROOT
      
    - name: Test
      working-directory: regtest
      
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: make --no-print-directory testclean
    - name: Check test results
      run: make checkfail
